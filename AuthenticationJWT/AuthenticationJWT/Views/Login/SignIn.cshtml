@model AuthenticationJWT.Models.Form

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scaled=1.0" />
    <link rel="stylesheet" href="~/Content/shared/pagelayout.css" />
    <link rel="stylesheet" href="~/Content/signin-layout/main-style.css" />
    <link rel="stylesheet" href="~/Content/signin-layout/validation-style.css" />
    <link rel="stylesheet" href="~/Content/signin-layout/login-form-style.css" />
    <link rel="stylesheet" href="~/Content/signin-layout/signup-form-style.css" />
    <script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js" type="text/javascript"></script>
    <title>SignIn</title>
</head>
<body>
    <div class="container">
        <input type="checkbox" id="check" />
        <div class="login-form">
            @if (ViewBag.InvalidCred != null)
            {
                <p id="invalid-cred">@ViewBag.InvalidCred</p>
                
                <script type="text/javascript">
                    setTimeout(() => {
                        let get = document.getElementById('invalid-cred');
                        get.style.display = 'none';
                    }, 5000);
                </script>
            }
            <header>Login</header>
            <form action="/Login/SignIn" method="post" class="sign-in-form">
                @Html.ValidationMessageFor(x => x.Login.Email)
                @Html.TextBoxFor(x => x.Login.Email, new { placeholder = Html.DisplayNameFor(x => x.Login.Email), autocomplete = "off" })

                @Html.ValidationMessageFor(x => x.Login.Password)
                @Html.PasswordFor(x => x.Login.Password, new { placeholder = Html.DisplayNameFor(x => x.Login.Password) })
                <a href="">Forgot Password?</a>
                @Html.AntiForgeryToken()
                <input type="submit" value="Login" class="button" />
            </form>
            <div class="sign-up">
                <span class="signup">
                    Don't have an account?
                    <label for="check">Signup</label>
                </span>
            </div>
        </div>
        <div class="registration-form">
            <header>SignUp</header>
            <form action="/Login/Register" method="post" class="sign-up-form">
                @Html.ValidationMessageFor(x => x.Register.Name)
                @Html.TextBoxFor(x => x.Register.Name, new { placeholder = Html.DisplayNameFor(x => x.Register.Name), autocomplete = "off" })

                @Html.ValidationMessageFor(x => x.Register.Email)
                @Html.TextBoxFor(x => x.Register.Email, new { placeholder = Html.DisplayNameFor(x => x.Register.Email), autocomplete = "off" })

                @Html.ValidationMessageFor(x => x.Register.Password)
                @Html.PasswordFor(x => x.Register.Password, new { placeholder = Html.DisplayNameFor(x => x.Register.Password) })

                @Html.AntiForgeryToken()
                <input type="submit" value="Submit" class="button" />
            </form>
            <div class="log-in">
                <span class="login">
                    Already have an account?
                    <label for="check">Login</label>
                </span>
            </div>
        </div>
    </div>
    @if (ViewBag.Error!=null)
    {
        <script type="text/javascript">
                        window.onload = function () {
                            alert("@ViewBag.Error");
                        };
        </script>
    }
</body>
</html>
